When you run 'git init' in a new directory, it creates a hidden folder called .git.. This is hidden because Apple automatically hides things with . in front of them.

There is nothing yet committed. There is no history. I guess you'll have to hit git commit to actually make it happen.

To the second question, I am not entirely sure what the stage area is. HOwever, I suppose I will say that it is the area in which you make changes. It is the area that is accessed by the user

To the third question, you can use this staging area by only commiting after you have made those logical changes.

Diagrams help me visualize branch structure because they are pretty.

The rest of these questions do not yet appear to be answerable.

Perhaps they are to be answered as I go through this lesson.

What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?